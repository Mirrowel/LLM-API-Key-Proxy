name: Build and Release Executable

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/proxy_app/**'
      - 'src/rotator_library/**'
      - 'setup_env.bat'
      - '.github/workflows/build.yml'
      - 'cliff.toml'

jobs:
  build:
    runs-on: windows-latest
    outputs:
      sha: ${{ steps.version.outputs.sha }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: python src/proxy_app/build.py

    - name: Get short SHA
      id: version
      shell: pwsh
      run: |
        $sha = git rev-parse --short HEAD
        echo "sha=$sha" >> $env:GITHUB_OUTPUT

    - name: Archive build artifact
      uses: actions/upload-artifact@v4
      with:
        name: proxy-app-build-${{ steps.version.outputs.sha }}
        path: |
          src/proxy_app/dist/proxy_app.exe
          setup_env.bat
          .env.example

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Check out repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate Build Version
      id: version
      shell: bash
      run: |
        BASE_VERSION=$(date +'%Y.%m.%d')-${{ needs.build.outputs.sha }}
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="$BASE_VERSION-${{ github.run_attempt }}"
        else
          VERSION="$BASE_VERSION"
        fi
        TIMESTAMP=$(date -u +'%Y-%m-%d %H:%M:%S UTC')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

    - name: Get Previous Tag
      id: previoustag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"

    - name: Generate Changelog
      id: changelog
      uses: orhun/git-cliff-action@v2
      with:
        config: cliff.toml
        args: --latest --strip all
      env:
        GIT_CLIFF_TAG: build-${{ steps.version.outputs.version }}

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: proxy-app-build-${{ needs.build.outputs.sha }}
        path: release-assets

    - name: Archive release files
      id: archive
      shell: bash
      run: |
        ARCHIVE_NAME="LLM-API-Key-Proxy-Build-${{ needs.build.outputs.sha }}.zip"
        cd release-assets
        zip ../$ARCHIVE_NAME *
        cd ..
        echo "ASSET_PATH=$ARCHIVE_NAME" >> $GITHUB_OUTPUT

    - name: Generate Build Metadata
      id: metadata
      shell: bash
      run: |
        BUILD_SIZE=$(du -sh release-assets/proxy_app.exe | cut -f1)
        COMMIT_COUNT=$(git rev-list --count HEAD)
        CONTRIBUTORS=$(git log --format='%an' | sort -u | wc -l)
        
        echo "build_size=$BUILD_SIZE" >> $GITHUB_OUTPUT
        echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
        echo "contributors=$CONTRIBUTORS" >> $GITHUB_OUTPUT

    - name: Create Release
      shell: bash
      run: |
        NOTES="## 🏗️ Build Information
        | Field | Value |
        |-------|-------|
        | 📦 **Version** | \`${{ steps.version.outputs.version }}\` |
        | 💾 **Binary Size** | \`${{ steps.metadata.outputs.build_size }}\` |
        | 🔗 **Commit** | [\`${{ needs.build.outputs.sha }}\`](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) |
        | 📅 **Build Date** | \`${{ steps.version.outputs.timestamp }}\` |
        | ⚡ **Trigger** | \`${{ github.event_name }}\` |
        | 👥 **Total Contributors** | \`${{ steps.metadata.outputs.contributors }}\` |
        | 📊 **Total Commits** | \`${{ steps.metadata.outputs.commit_count }}\` |

        ## 📋 What's Changed

        ${{ steps.changelog.outputs.changelog }}

        ## 📦 Assets & Installation
        
        ### Quick Start
        \`\`\`bash
        # Download and extract
        wget https://github.com/${{ github.repository }}/releases/download/build-${{ steps.version.outputs.version }}/${{ steps.archive.outputs.ASSET_PATH }}
        unzip ${{ steps.archive.outputs.ASSET_PATH }}
        
        # Setup and run
        ./setup_env.bat
        cp .env.example .env
        # Edit .env with your API keys
        ./proxy_app.exe
        \`\`\`

        ### 📁 Included Files
        | File | Description | Size |
        |------|-------------|------|
        | 🚀 \`proxy_app.exe\` | Main application executable | Primary |
        | ⚙️ \`setup_env.bat\` | Environment setup script | Helper |
        | 📝 \`.env.example\` | Configuration template | Template |

        ## 🔗 Useful Links
        - 📖 [Documentation](https://github.com/${{ github.repository }}/wiki)
        - 🐛 [Report Issues](https://github.com/${{ github.repository }}/issues)
        - 💬 [Discussions](https://github.com/${{ github.repository }}/discussions)
        - 🌟 [Star this repo](https://github.com/${{ github.repository }}) if you find it useful!

        ---
        
        > **Note**: This is an automated build release. For stable releases, check our [main releases](https://github.com/${{ github.repository }}/releases)."

        gh release create build-${{ steps.version.outputs.version }} \
          --title "🚀 Build ${{ steps.version.outputs.version }}" \
          --notes "$NOTES" \
          --latest \
          --discussion-category "Releases" \
          ${{ steps.archive.outputs.ASSET_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
